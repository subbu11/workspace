/*
 * TCP client to send messages to TCP server
 */
#include <stdio.h>
#include <string.h>
#include <sys/socket.h> //socket
#include <netinet/in.h> //IPPROTO_TCP

#include "api.h"

int main()
{
    /* create socket */
    int sd = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP);
    if(sd < 0)
    {
        printf("Socket creation failed\n");
        return -1;
    }
    else 
    {
        printf("socket created\n");
    }

    struct sockaddr_in serverAddr;
    memset(&serverAddr, 0, sizeof(struct sockaddr_in));
    serverAddr.sin_family = AF_INET;
    serverAddr.sin_addr.s_addr = inet_addr("192.168.0.51");
    serverAddr.sin_port = htons(SERVER_PORT);

    /* connect to TCP server */
    int rc;
    if((rc = connect(sd, (struct sockaddr *)&serverAddr, sizeof(struct sockaddr_in))) < 0)
    {
        perror("Client-connect() error");
        return -1;
    }
    else
        printf("Connection established...\n");

   /* send data */
    int i = 5;
    for (i = 0; i < 5; i++)
    {
        MsgT m1;
        memset(&m1, 0, sizeof(MsgT));

        int i;
        for(i = 0; i < 15000; i++)
        {
            m1.data[i] = '1';
        }
        m1.data[i] = '\0';
        m1.len = strlen(m1.data);
        
        uint64_t tmp  = 0x11112222333344444;
        
        m1.u64 = tmp;
        memcpy(m1.u32, &tmp, 8);
        memcpy(m1.u8, &tmp, 8);

        printf("u64 : 0x%016llX\n", m1.u64);
        printf("u32 : 0x%08X, 0x%08X\n", m1.u32[0], m1.u32[1]);
        printf("u8 : 0x%02X, 0x%02X, 0x%02X, 0x%02X, 0x%02X, 0x%02X, 0x%02X, 0x%02X\n",
                m1.u8[0], m1.u8[1], m1.u8[2], m1.u8[3],
                m1.u8[4], m1.u8[5], m1.u8[6], m1.u8[7]);

        int nbytes = write(sd, &m1, sizeof(m1));
        printf("Sent %u bytes\n", nbytes);
    }
}
